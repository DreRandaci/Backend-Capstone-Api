// <auto-generated />
using BackendWatsonApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace BackendWatsonApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20180315181731_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("BackendWatsonApi.Models.Image", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ImageUri")
                        .IsRequired();

                    b.HasKey("ImageId");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("BackendWatsonApi.Models.Place", b =>
                {
                    b.Property<int>("PlaceId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<double?>("Latitude");

                    b.Property<double?>("Longitude");

                    b.Property<string>("Notes");

                    b.HasKey("PlaceId");

                    b.ToTable("Place");
                });

            modelBuilder.Entity("BackendWatsonApi.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("UserName")
                        .IsRequired();

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("BackendWatsonApi.Models.UserPost", b =>
                {
                    b.Property<int>("UserPostId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateAdded");

                    b.Property<int>("ImageId");

                    b.Property<int>("PlaceId");

                    b.Property<int>("UserId");

                    b.HasKey("UserPostId");

                    b.HasIndex("ImageId");

                    b.HasIndex("PlaceId");

                    b.HasIndex("UserId");

                    b.ToTable("UserPost");
                });

            modelBuilder.Entity("BackendWatsonApi.Models.WatsonClassification", b =>
                {
                    b.Property<int>("ClassificationId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Class")
                        .IsRequired();

                    b.Property<string>("ClassifierId")
                        .IsRequired();

                    b.Property<string>("ClassifierName")
                        .IsRequired();

                    b.Property<string>("ConfidenceScore")
                        .IsRequired();

                    b.Property<string>("TypeHierarchy");

                    b.Property<int>("UserPostId");

                    b.HasKey("ClassificationId");

                    b.HasIndex("UserPostId");

                    b.ToTable("WatsonClassification");
                });

            modelBuilder.Entity("BackendWatsonApi.Models.UserPost", b =>
                {
                    b.HasOne("BackendWatsonApi.Models.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BackendWatsonApi.Models.Place", "Place")
                        .WithMany("UserPosts")
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BackendWatsonApi.Models.User", "User")
                        .WithMany("UserPosts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BackendWatsonApi.Models.WatsonClassification", b =>
                {
                    b.HasOne("BackendWatsonApi.Models.UserPost", "UserPost")
                        .WithMany("Classifications")
                        .HasForeignKey("UserPostId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
